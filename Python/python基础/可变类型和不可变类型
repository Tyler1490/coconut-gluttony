1、不可变类型（Immutable Types）：
例子：int, float, str, tuple, bool, frozenset, bytes
id() 行为：
对象内容相同，它们的 id() 可能相同。
2、可变类型（Mutable Types）：
例子：list, dict, set, 自定义对象（类实例）
id() 行为：
即使内容相同，id() 通常不同，因为每次创建对象时，Python 为其分配新的内存地址。
可变对象的值可以被修改，不会自动进行对象重用。
3、类型	        操作后 id() 的变化	        说明
   不可变类型	每次操作后都创建新对象	    操作后对象会变成新的对象，id() 改变。
   可变类型	    修改对象时 id() 不变	        操作通常是原地修改（例如 append()、update())，id() 不变。
   创建新对象	对象完全替换时，id() 改变	    显式创建新对象时，id() 会变化。
4. copy方法： 
对于不可变类型，每次修改都会创建一个新的对象，因此 id() 会发生变化（无论是浅拷贝还是深拷贝）。
对于可变类型，使用 copy()（浅拷贝）时，新的容器对象 id() 会变化，但其内部元素（如列表中的嵌套列表）仍然共享相同的 id()。使用 deepcopy() 时，所有对象，包括嵌套对象，都会被复制，id() 都会变化。
